{"version":3,"sources":["uni-app:///main.js",null,"webpack:///D:/xdc@xdc/xdc/TimePlan/pages/focus/focus.vue?b76b","webpack:///D:/xdc@xdc/xdc/TimePlan/pages/focus/focus.vue?6ac1","webpack:///D:/xdc@xdc/xdc/TimePlan/pages/focus/focus.vue?b83c","uni-app:///pages/focus/focus.vue","webpack:///D:/xdc@xdc/xdc/TimePlan/pages/focus/focus.vue?688c","webpack:///D:/xdc@xdc/xdc/TimePlan/pages/focus/focus.vue?c316"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page","background","loadSelectedTask","loadFocusHistory","calculateStats","clearTimer","currentTask","uni","title","icon","focusMode","remainingTime","totalTime","url","startTimer","resumeTimer","pauseTimer","isStarted","isPaused","clearInterval","timer","mode","remaining","total","startTime","completeTimer","content","success","saveFocusRecord","innerAudioContext","console","id","completedAt","duration","record","history","focusHistory","tasks","updateTreeGrowth","level","experience","totalMinutes","nextLevelExp","tree","todayFocusCount","todayFocusMinutes","completedTasks"],"mappings":";;;;;;;;;;;;;AAAA;AAGA;AACA;AAHA;AACAA,EAAE,CAACC,iCAAiC,GAAGC,mBAAmB;AAG1DC,UAAU,CAACC,cAAI,CAAC,C;;;;;;;;;;;;;ACLhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkH;AAClH;AACoE;AACL;AACE;;;AAGjE;AACsK;AACtK,gBAAgB,6KAAU;AAC1B,EAAE,sFAAM;AACR,EAAE,gFAAM;AACR,EAAE,yFAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,oFAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,aAAa,qTAEN;AACP,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACxDA;AAAA;AAAA;AAAA;AAA4nB,CAAgB,0nBAAG,EAAC,C;;;;;;;;;;;;;;ACuFhpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;EACA;EACA;IACAC;EACA;AACA;AAEA;EACA;EACA;EACA;AACA;AAEA;EACA;AACA;;AAEA;AACA;EAAA;EACA;EACA;EACA;EACA;EAEA;IACA;IACAC;EACA;EACAC;EACAC;AACA;AAEA;EACAF;AACA;AAEA;EACAG;AACA;;AAEA;AACA;EACA;EACA;IACAC;IACAC;EACA;AACA;;AAEA;EACA;IACAA;MACAC;MACAC;IACA;IACA;EACA;EAEAC;;EAEA;EACA;IACAC;IACAC;EACA;IACAD;IACAC;EACA;IACA;IACAD;IACAC;EACA;AACA;AAEA;EACA;IACAL;MACAC;MACAC;IACA;IACA;EACA;;EAEA;EACAF;IACAM;EACA;AACA;AAEA;EACA;EACA;EACA;AACA;AAEA;EACA;EACA;EACA;EACA;AACA;AAEA;EACA;IACAN;MACAC;MACAC;IACA;IACA;EACA;EAEA;IACAK;EACA;IACAC;EACA;IACAC;EACA;AACA;AAEA;EACAC;EACAC;;EAEA;EACA;IACAC;EACA;;EAEA;EACA;IACA;IACAC;MACAT;;MAEA;MACAJ;QACAc;QACAC;QACAC;QACAN;QACAC;QACAM;MACA;IACA;EACA;IACA;IACAJ;MACA;QACAT;;QAEA;QACAJ;UACAc;UACAC;UACAC;UACAN;UACAC;UACAM;QACA;;QAEA;QACA;UACAC;QACA;MACA;IACA;EACA;AACA;AAEA;EACAP;EACAC;AACA;AAEA;EACAD;EAEA;IACA;IACAE;MACAT;;MAEA;MACAJ;QACAc;QACAC;QACAC;QACAN;QACAC;QACAM;MACA;IACA;EACA;IACA;IACAJ;MACA;QACAT;;QAEA;QACAJ;UACAc;UACAC;UACAC;UACAN;UACAC;UACAM;QACA;;QAEA;QACA;UACAC;QACA;MACA;IACA;EACA;AACA;AAEA;EACA;EACAN;;EAEA;EACAF;EACAC;;EAEA;EACAX;;EAEA;EACA;IACAI;IACAC;EACA;IACAD;IACAC;EACA;IACA;IACAD;IACAC;EACA;;EAEA;EACA;IACAL;MACAC;MACAC;IACA;EACA;;EAEA;EACA;IACA;IACA;EAAA;AAEA;AAEA;EACA;EACA;IACA;EACA;;EAEA;EACA;IACA;IACAF;MACAC;MACAkB;MACAC;QACA;UACA;;UAEA;UACAR;;UAEA;UACAF;UACAC;;UAEA;UACAX;;UAEA;UACA;YACAI;YACAC;UACA;YACAD;YACAC;UACA;UAEAL;YACAC;YACAC;UACA;QACA;MACA;IACA;EACA;IACA;IACAmB;;IAEA;IACAT;;IAEA;IACAF;IACAC;;IAEA;IACAP;IACAC;;IAEA;IACAL;IAEAA;MACAC;MACAC;IACA;EACA;AACA;AAEA;EACA;EACAU;;EAEA;EACA;EACAU;EACAA;;EAEA;EACAtB;IACAoB;MACAG;IACA;EACA;;EAEA;EACAF;;EAEA;EACAX;EACAC;;EAEA;EACAX;;EAEA;EACA;IACAI;IACAC;EACA;IACAD;IACAC;EACA;;EAEA;EACAL;IACAC;IACAC;EACA;AACA;AAEA;EACA;EACA;IACAsB;IACAV;IACAW;IACAC;EACA;;EAEA;EACA;IACA;IACAC;EACA;IACA;IACAA;EACA;;EAEA;EACA;IACAA;IACAA;IACAA;EACA;;EAEA;EACA;;EAEA;EACAC;;EAEA;EACA5B;;EAEA;EACA6B;;EAEA;EACAhC;;EAEA;EACA;IACA;IACA;;IAEA;IACA;MAAA;IAAA;IACA;MACA;MACAiC;;MAEA;MACA;QACAA;QACAA;MACA;;MAEA;MACA9B;IACA;EACA;;EAEA;EACA+B;AACA;AAEA;EACA;EACA;IACAC;IACAC;IACAC;IACAC;EACA;;EAEA;EACAC;;EAEA;EACAA;;EAEA;EACA;IACA;IACAA;IACAA;;IAEA;IACAA;;IAEA;IACApC;MACAC;MACAC;MACAwB;IACA;EACA;;EAEA;EACA1B;AACA;AAEA;EACA6B;AACA;AAEA;EACA;EACA;;EAEA;EACAQ;EACAC;;EAEA;EACAT;IACA;IACA;IACA;MACAQ;MACAC;IACA;EACA;;EAEA;EACA;EACAC;IAAA;EAAA;AACA;AAEA;EACAvC;IACAM;EACA;AACA;AAEA;EACA;IACAM;IACAC;EACA;AACA,C;;;;;;;;;;;;;ACxmBA;AAAA;AAAA;AAAA;AAA04B,CAAgB,o2BAAG,EAAC,C;;;;;;;;;;;ACA95B;AACA,OAAO,KAAU,EAAE,kBAKd","file":"pages/focus/focus.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './pages/focus/focus.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./focus.vue?vue&type=template&id=43e7d710&\"\nvar renderjs\nimport script from \"./focus.vue?vue&type=script&setup=true&lang=js&\"\nexport * from \"./focus.vue?vue&type=script&setup=true&lang=js&\"\nimport style0 from \"./focus.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/focus/focus.vue\"\nexport default component.exports","export * from \"-!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--17-0!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./focus.vue?vue&type=template&id=43e7d710&\"","var components\ntry {\n  components = {\n    uniIcons: function () {\n      return import(\n        /* webpackChunkName: \"uni_modules/uni-icons/components/uni-icons/uni-icons\" */ \"@/uni_modules/uni-icons/components/uni-icons/uni-icons.vue\"\n      )\n    },\n  }\n} catch (e) {\n  if (\n    e.message.indexOf(\"Cannot find module\") !== -1 &&\n    e.message.indexOf(\".vue\") !== -1\n  ) {\n    console.error(e.message)\n    console.error(\"1. 排查组件名称拼写是否正确\")\n    console.error(\n      \"2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom\"\n    )\n    console.error(\n      \"3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件\"\n    )\n  } else {\n    throw e\n  }\n}\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  var m0 = _vm.formatTime(_vm.remainingTime)\n  var g0 = _vm.focusHistory.length\n  var l0 =\n    g0 > 0\n      ? _vm.__map(_vm.recentHistory, function (item, index) {\n          var $orig = _vm.__get_orig(item)\n          var m1 = _vm.formatHistoryTime(item.completedAt)\n          return {\n            $orig: $orig,\n            m1: m1,\n          }\n        })\n      : null\n  _vm.$mp.data = Object.assign(\n    {},\n    {\n      $root: {\n        m0: m0,\n        g0: g0,\n        l0: l0,\n      },\n    }\n  )\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./focus.vue?vue&type=script&setup=true&lang=js&\"; export default mod; export * from \"-!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./focus.vue?vue&type=script&setup=true&lang=js&\"","<template>\n\t<view class=\"container\">\n\t\t<view class=\"header\">\n\t\t\t<text class=\"header-title\">专注计时器</text>\n\t\t</view>\n\t\t\n\t\t<!-- 模式选择器 -->\n\t\t<view class=\"mode-selector\">\n\t\t\t<view :class=\"['mode-btn', focusMode === 'pomodoro' ? 'active' : '']\" @tap=\"changeMode('pomodoro')\">\n\t\t\t\t<text>番茄钟</text>\n\t\t\t</view>\n\t\t\t<view :class=\"['mode-btn', focusMode === 'timer' ? 'active' : '']\" @tap=\"changeMode('timer')\">\n\t\t\t\t<text>计时器</text>\n\t\t\t</view>\n\t\t\t<view :class=\"['mode-btn', focusMode === 'stopwatch' ? 'active' : '']\" @tap=\"changeMode('stopwatch')\">\n\t\t\t\t<text>秒表</text>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- 任务选择 -->\n\t\t<view class=\"task-selector\" v-if=\"focusMode !== 'stopwatch'\">\n\t\t\t<view class=\"selector-wrapper\" @tap=\"selectTask\">\n\t\t\t\t<text class=\"selector-text\">{{currentTask ? currentTask.title : '选择要专注的任务...'}}</text>\n\t\t\t\t<uni-icons type=\"arrow-down\" size=\"14\" color=\"#6b7280\"></uni-icons>\n\t\t\t</view>\n\t\t</view>\n\n\t\t<!-- 计时器 -->\n\t\t<view class=\"timer-container\">\n\t\t\t<view class=\"timer-circle\" :style=\"timerCircleStyle\">\n\t\t\t\t<view class=\"timer-inner-circle\"></view>\n\t\t\t\t<text class=\"timer-display\">{{formatTime(remainingTime)}}</text>\n\t\t\t</view>\n\t\t\t<text class=\"timer-label\">{{timerLabel}}</text>\n\t\t</view>\n\n\t\t<!-- 控制按钮 -->\n\t\t<view class=\"timer-controls\">\n\t\t\t<view class=\"timer-btn\" @tap=\"resetTimer\">\n\t\t\t\t<uni-icons type=\"refresh\" size=\"24\" color=\"#4f46e5\"></uni-icons>\n\t\t\t</view>\n\t\t\t<view class=\"timer-btn primary\" @tap=\"toggleTimer\">\n\t\t\t\t<uni-icons :type=\"isStarted && !isPaused ? 'pause' : 'play'\" size=\"28\" color=\"#ffffff\"></uni-icons>\n\t\t\t</view>\n\t\t\t<view class=\"timer-btn\" @tap=\"stopTimer\">\n\t\t\t\t<uni-icons type=\"close\" size=\"24\" color=\"#4f46e5\"></uni-icons>\n\t\t\t</view>\n\t\t</view>\n\n\t\t<!-- 专注统计 -->\n\t\t<view class=\"stats-container\">\n\t\t\t<view class=\"stat-card\">\n\t\t\t\t<text class=\"stat-value\">{{todayFocusCount}}</text>\n\t\t\t\t<text class=\"stat-label\">今日专注</text>\n\t\t\t</view>\n\t\t\t<view class=\"stat-card\">\n\t\t\t\t<text class=\"stat-value\">{{todayFocusMinutes}}</text>\n\t\t\t\t<text class=\"stat-label\">专注分钟</text>\n\t\t\t</view>\n\t\t\t<view class=\"stat-card\">\n\t\t\t\t<text class=\"stat-value\">{{completedTasks}}</text>\n\t\t\t\t<text class=\"stat-label\">完成任务</text>\n\t\t\t</view>\n\t\t</view>\n\n\t\t<!-- 历史记录 -->\n\t\t<view class=\"card history-container\" v-if=\"focusHistory.length > 0\">\n\t\t\t<view class=\"card-header\">\n\t\t\t\t<text class=\"card-title\">最近专注</text>\n\t\t\t\t<text class=\"view-more\" @tap=\"viewAllHistory\">查看全部</text>\n\t\t\t</view>\n\t\t\t<view class=\"history-list\">\n\t\t\t\t<view class=\"history-item\" v-for=\"(item, index) in recentHistory\" :key=\"index\">\n\t\t\t\t\t<view class=\"history-content\">\n\t\t\t\t\t\t<text class=\"history-task\">{{item.taskTitle || '未命名任务'}}</text>\n\t\t\t\t\t\t<text class=\"history-time\">{{formatHistoryTime(item.completedAt)}} · {{item.duration}}分钟</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view :class=\"['history-tag', `tag-${item.category || 'default'}`]\">\n\t\t\t\t\t\t{{item.category || '专注'}}\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t</view>\n</template>\n\n<script setup>\n\timport { ref, computed, onMounted, onUnmounted, onShow } from 'vue';\n\t\n\t// 状态变量\n\tconst focusMode = ref('pomodoro'); // pomodoro, timer, stopwatch\n\tconst currentTask = ref(null);\n\tconst isStarted = ref(false);\n\tconst isPaused = ref(false);\n\tconst remainingTime = ref(25 * 60); // 默认25分钟\n\tconst totalTime = ref(25 * 60);\n\tconst timer = ref(null);\n\t\n\t// 统计数据\n\tconst todayFocusCount = ref(0);\n\tconst todayFocusMinutes = ref(0);\n\tconst completedTasks = ref(0);\n\tconst focusHistory = ref([]);\n\t\n\t// 模式时间设置\n\tconst pomodoroTime = 25 * 60;\n\tconst timerTime = 45 * 60;\n\tconst progress = ref(0); // 进度百分比 0-100\n\t\n\t// 计算属性\n\tconst timerCircleStyle = computed(() => {\n\t\tconst progressValue = isStarted.value ? (1 - remainingTime.value / totalTime.value) * 100 : 0;\n\t\treturn {\n\t\t\tbackground: `conic-gradient(#4f46e5 ${progressValue}%, transparent ${progressValue}%)`\n\t\t};\n\t});\n\t\n\tconst timerLabel = computed(() => {\n\t\tif (focusMode.value === 'pomodoro') return '专注时间';\n\t\tif (focusMode.value === 'timer') return '计时器';\n\t\treturn '秒表';\n\t});\n\t\n\tconst recentHistory = computed(() => {\n\t\treturn focusHistory.value.slice(0, 3); // 只显示最近3条\n\t});\n\t\n\t// 生命周期钩子\n\tonMounted(() => {\n\t\t// 相当于 onLoad\n\t\tconst pages = getCurrentPages();\n\t\tconst currentPage = pages[pages.length - 1];\n\t\tconst options = currentPage.$page?.options || {};\n\t\t\n\t\tif (options.mode === 'select') {\n\t\t\t// 如果是从任务选择页面返回\n\t\t\tloadSelectedTask();\n\t\t}\n\t\tloadFocusHistory();\n\t\tcalculateStats();\n\t});\n\t\n\tonShow(() => {\n\t\tloadSelectedTask();\n\t});\n\t\n\tonUnmounted(() => {\n\t\tclearTimer();\n\t});\n\t\n\t// 方法\n\tfunction loadSelectedTask() {\n\t\tconst task = uni.getStorageSync('selectedTask');\n\t\tif (task) {\n\t\t\tcurrentTask.value = task;\n\t\t\tuni.removeStorageSync('selectedTask'); // 清除选中的任务\n\t\t}\n\t}\n\t\n\tfunction changeMode(mode) {\n\t\tif (isStarted.value) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '请先停止当前计时',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tfocusMode.value = mode;\n\t\t\n\t\t// 根据模式设置时间\n\t\tif (mode === 'pomodoro') {\n\t\t\tremainingTime.value = pomodoroTime;\n\t\t\ttotalTime.value = pomodoroTime;\n\t\t} else if (mode === 'timer') {\n\t\t\tremainingTime.value = timerTime;\n\t\t\ttotalTime.value = timerTime;\n\t\t} else {\n\t\t\t// 秒表模式从0开始计时\n\t\t\tremainingTime.value = 0;\n\t\t\ttotalTime.value = 0;\n\t\t}\n\t}\n\t\n\tfunction selectTask() {\n\t\tif (isStarted.value) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '请先停止当前计时',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// 跳转到任务选择页面\n\t\tuni.navigateTo({\n\t\t\turl: '/pages/taskList/taskList?mode=select'\n\t\t});\n\t}\n\t\n\tfunction formatTime(seconds) {\n\t\tconst minutes = Math.floor(Math.abs(seconds) / 60);\n\t\tconst remainingSeconds = Math.abs(seconds) % 60;\n\t\treturn `${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}`;\n\t}\n\t\n\tfunction formatHistoryTime(dateStr) {\n\t\tconst date = new Date(dateStr);\n\t\tconst hours = date.getHours().toString().padStart(2, '0');\n\t\tconst minutes = date.getMinutes().toString().padStart(2, '0');\n\t\treturn `${hours}:${minutes}`;\n\t}\n\t\n\tfunction toggleTimer() {\n\t\tif (focusMode.value !== 'stopwatch' && !currentTask.value) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '请先选择任务',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (!isStarted.value) {\n\t\t\tstartTimer();\n\t\t} else if (isPaused.value) {\n\t\t\tresumeTimer();\n\t\t} else {\n\t\t\tpauseTimer();\n\t\t}\n\t}\n\t\n\tfunction startTimer() {\n\t\tisStarted.value = true;\n\t\tisPaused.value = false;\n\t\t\n\t\t// 清除可能存在的计时器\n\t\tif (timer.value) {\n\t\t\tclearInterval(timer.value);\n\t\t}\n\t\t\n\t\t// 根据模式设置计时器行为\n\t\tif (focusMode.value === 'stopwatch') {\n\t\t\t// 秒表模式向上计时\n\t\t\ttimer.value = setInterval(() => {\n\t\t\t\tremainingTime.value++;\n\t\t\t\t\n\t\t\t\t// 保存计时状态到本地\n\t\t\t\tuni.setStorageSync('timerState', {\n\t\t\t\t\tmode: focusMode.value,\n\t\t\t\t\tremaining: remainingTime.value,\n\t\t\t\t\ttotal: totalTime.value,\n\t\t\t\t\tisStarted: isStarted.value,\n\t\t\t\t\tisPaused: isPaused.value,\n\t\t\t\t\tstartTime: Date.now()\n\t\t\t\t});\n\t\t\t}, 1000);\n\t\t} else {\n\t\t\t// 番茄钟和计时器向下计时\n\t\t\ttimer.value = setInterval(() => {\n\t\t\t\tif (remainingTime.value > 0) {\n\t\t\t\t\tremainingTime.value--;\n\t\t\t\t\t\n\t\t\t\t\t// 保存计时状态到本地\n\t\t\t\t\tuni.setStorageSync('timerState', {\n\t\t\t\t\t\tmode: focusMode.value,\n\t\t\t\t\t\tremaining: remainingTime.value,\n\t\t\t\t\t\ttotal: totalTime.value,\n\t\t\t\t\t\tisStarted: isStarted.value,\n\t\t\t\t\t\tisPaused: isPaused.value,\n\t\t\t\t\t\tstartTime: Date.now()\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t// 如果倒计时结束\n\t\t\t\t\tif (remainingTime.value === 0) {\n\t\t\t\t\t\tcompleteTimer();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t}\n\t}\n\t\n\tfunction pauseTimer() {\n\t\tisPaused.value = true;\n\t\tclearInterval(timer.value);\n\t}\n\t\n\tfunction resumeTimer() {\n\t\tisPaused.value = false;\n\t\t\n\t\tif (focusMode.value === 'stopwatch') {\n\t\t\t// 秒表模式向上计时\n\t\t\ttimer.value = setInterval(() => {\n\t\t\t\tremainingTime.value++;\n\t\t\t\t\n\t\t\t\t// 保存计时状态到本地\n\t\t\t\tuni.setStorageSync('timerState', {\n\t\t\t\t\tmode: focusMode.value,\n\t\t\t\t\tremaining: remainingTime.value,\n\t\t\t\t\ttotal: totalTime.value,\n\t\t\t\t\tisStarted: isStarted.value,\n\t\t\t\t\tisPaused: isPaused.value,\n\t\t\t\t\tstartTime: Date.now()\n\t\t\t\t});\n\t\t\t}, 1000);\n\t\t} else {\n\t\t\t// 番茄钟和计时器向下计时\n\t\t\ttimer.value = setInterval(() => {\n\t\t\t\tif (remainingTime.value > 0) {\n\t\t\t\t\tremainingTime.value--;\n\t\t\t\t\t\n\t\t\t\t\t// 保存计时状态到本地\n\t\t\t\t\tuni.setStorageSync('timerState', {\n\t\t\t\t\t\tmode: focusMode.value,\n\t\t\t\t\t\tremaining: remainingTime.value,\n\t\t\t\t\t\ttotal: totalTime.value,\n\t\t\t\t\t\tisStarted: isStarted.value,\n\t\t\t\t\t\tisPaused: isPaused.value,\n\t\t\t\t\t\tstartTime: Date.now()\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t// 如果倒计时结束\n\t\t\t\t\tif (remainingTime.value === 0) {\n\t\t\t\t\t\tcompleteTimer();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t}\n\t}\n\t\n\tfunction resetTimer() {\n\t\t// 停止计时器\n\t\tclearInterval(timer.value);\n\t\t\n\t\t// 重置状态\n\t\tisStarted.value = false;\n\t\tisPaused.value = false;\n\t\t\n\t\t// 清除本地存储的计时状态\n\t\tuni.removeStorageSync('timerState');\n\t\t\n\t\t// 根据当前模式重置时间\n\t\tif (focusMode.value === 'pomodoro') {\n\t\t\tremainingTime.value = pomodoroTime;\n\t\t\ttotalTime.value = pomodoroTime;\n\t\t} else if (focusMode.value === 'timer') {\n\t\t\tremainingTime.value = timerTime;\n\t\t\ttotalTime.value = timerTime;\n\t\t} else {\n\t\t\t// 秒表模式重置为0\n\t\t\tremainingTime.value = 0;\n\t\t\ttotalTime.value = 0;\n\t\t}\n\t\t\n\t\t// 如果用户手动重置，不保存记录\n\t\tif (isStarted.value) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '计时已重置',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t}\n\t\t\n\t\t// 允许重新选择任务\n\t\tif (focusMode.value !== 'stopwatch') {\n\t\t\t// 可选：清除当前任务\n\t\t\t// currentTask.value = null;\n\t\t}\n\t}\n\t\n\tfunction stopTimer() {\n\t\t// 如果计时器未启动，不做任何处理\n\t\tif (!isStarted.value) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// 如果是番茄钟或计时器模式，且已经开始但未完成\n\t\tif (focusMode.value !== 'stopwatch' && remainingTime.value > 0) {\n\t\t\t// 显示确认对话框\n\t\t\tuni.showModal({\n\t\t\t\ttitle: '确认停止',\n\t\t\t\tcontent: '确定要停止当前计时吗？您的进度将不会被保存。',\n\t\t\t\tsuccess: (res) => {\n\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t// 用户点击确定\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 停止计时器\n\t\t\t\t\t\tclearInterval(timer.value);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 重置状态\n\t\t\t\t\t\tisStarted.value = false;\n\t\t\t\t\t\tisPaused.value = false;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 清除本地存储的计时状态\n\t\t\t\t\t\tuni.removeStorageSync('timerState');\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 根据当前模式重置时间\n\t\t\t\t\t\tif (focusMode.value === 'pomodoro') {\n\t\t\t\t\t\t\tremainingTime.value = pomodoroTime;\n\t\t\t\t\t\t\ttotalTime.value = pomodoroTime;\n\t\t\t\t\t\t} else if (focusMode.value === 'timer') {\n\t\t\t\t\t\t\tremainingTime.value = timerTime;\n\t\t\t\t\t\t\ttotalTime.value = timerTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '计时已停止',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (focusMode.value === 'stopwatch') {\n\t\t\t// 秒表模式直接保存记录\n\t\t\tsaveFocusRecord();\n\t\t\t\n\t\t\t// 停止计时器\n\t\t\tclearInterval(timer.value);\n\t\t\t\n\t\t\t// 重置状态\n\t\t\tisStarted.value = false;\n\t\t\tisPaused.value = false;\n\t\t\t\n\t\t\t// 重置时间\n\t\t\tremainingTime.value = 0;\n\t\t\ttotalTime.value = 0;\n\t\t\t\n\t\t\t// 清除本地存储的计时状态\n\t\t\tuni.removeStorageSync('timerState');\n\t\t\t\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '记录已保存',\n\t\t\t\ticon: 'success'\n\t\t\t});\n\t\t}\n\t}\n\t\n\tfunction completeTimer() {\n\t\t// 停止计时器\n\t\tclearInterval(timer.value);\n\t\t\n\t\t// 播放提示音\n\t\tconst innerAudioContext = uni.createInnerAudioContext();\n\t\tinnerAudioContext.src = '/static/audio/complete.mp3';\n\t\tinnerAudioContext.play();\n\t\t\n\t\t// 震动提醒\n\t\tuni.vibrateShort({\n\t\t\tsuccess: function() {\n\t\t\t\tconsole.log('震动成功');\n\t\t\t}\n\t\t});\n\t\t\n\t\t// 保存记录\n\t\tsaveFocusRecord();\n\t\t\n\t\t// 重置状态\n\t\tisStarted.value = false;\n\t\tisPaused.value = false;\n\t\t\n\t\t// 清除本地存储的计时状态\n\t\tuni.removeStorageSync('timerState');\n\t\t\n\t\t// 根据当前模式重置时间\n\t\tif (focusMode.value === 'pomodoro') {\n\t\t\tremainingTime.value = pomodoroTime;\n\t\t\ttotalTime.value = pomodoroTime;\n\t\t} else if (focusMode.value === 'timer') {\n\t\t\tremainingTime.value = timerTime;\n\t\t\ttotalTime.value = timerTime;\n\t\t}\n\t\t\n\t\t// 显示完成提示\n\t\tuni.showToast({\n\t\t\ttitle: '专注时间完成！',\n\t\t\ticon: 'success'\n\t\t});\n\t}\n\t\n\tfunction saveFocusRecord() {\n\t\t// 创建记录对象\n\t\tlet record = {\n\t\t\tid: Date.now().toString(),\n\t\t\tmode: focusMode.value,\n\t\t\tcompletedAt: new Date().toISOString(),\n\t\t\tduration: 0 // 实际专注分钟数\n\t\t};\n\t\t\n\t\t// 根据不同模式计算持续时间\n\t\tif (focusMode.value === 'stopwatch') {\n\t\t\t// 秒表模式直接用累计时间\n\t\t\trecord.duration = Math.round(remainingTime.value / 60);\n\t\t} else {\n\t\t\t// 番茄钟和计时器用已经消耗的时间\n\t\t\trecord.duration = Math.round((totalTime.value - remainingTime.value) / 60);\n\t\t}\n\t\t\n\t\t// 如果有关联任务，记录任务信息\n\t\tif (currentTask.value) {\n\t\t\trecord.taskId = currentTask.value.id;\n\t\t\trecord.taskTitle = currentTask.value.title;\n\t\t\trecord.category = currentTask.value.category;\n\t\t}\n\t\t\n\t\t// 获取现有历史记录\n\t\tlet history = uni.getStorageSync('focusHistory') || [];\n\t\t\n\t\t// 添加新记录\n\t\thistory.unshift(record);\n\t\t\n\t\t// 更新本地存储\n\t\tuni.setStorageSync('focusHistory', history);\n\t\t\n\t\t// 更新状态\n\t\tfocusHistory.value = history;\n\t\t\n\t\t// 更新统计数据\n\t\tcalculateStats();\n\t\t\n\t\t// 更新任务完成情况（如果有关联任务）\n\t\tif (currentTask.value) {\n\t\t\t// 获取任务列表\n\t\t\tlet tasks = uni.getStorageSync('tasks') || [];\n\t\t\t\n\t\t\t// 查找并更新任务\n\t\t\tconst taskIndex = tasks.findIndex(task => task.id === currentTask.value.id);\n\t\t\tif (taskIndex !== -1) {\n\t\t\t\t// 更新任务完成时长\n\t\t\t\ttasks[taskIndex].completedMinutes = (tasks[taskIndex].completedMinutes || 0) + record.duration;\n\t\t\t\t\n\t\t\t\t// 如果完成时长超过计划时长，标记为完成\n\t\t\t\tif (tasks[taskIndex].completedMinutes >= tasks[taskIndex].plannedMinutes) {\n\t\t\t\t\ttasks[taskIndex].completed = true;\n\t\t\t\t\ttasks[taskIndex].completedAt = new Date().toISOString();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 更新任务列表\n\t\t\t\tuni.setStorageSync('tasks', tasks);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// 更新树木生长\n\t\tupdateTreeGrowth(record.duration);\n\t}\n\t\n\tfunction updateTreeGrowth(minutes) {\n\t\t// 获取当前树木状态\n\t\tlet tree = uni.getStorageSync('growingTree') || {\n\t\t\tlevel: 1,\n\t\t\texperience: 0,\n\t\t\ttotalMinutes: 0,\n\t\t\tnextLevelExp: 60 // 初始下一级所需经验\n\t\t};\n\t\t\n\t\t// 更新总专注分钟数\n\t\ttree.totalMinutes += minutes;\n\t\t\n\t\t// 添加经验值（1分钟 = 1经验）\n\t\ttree.experience += minutes;\n\t\t\n\t\t// 检查是否升级\n\t\twhile (tree.experience >= tree.nextLevelExp) {\n\t\t\t// 升级\n\t\t\ttree.level += 1;\n\t\t\ttree.experience -= tree.nextLevelExp;\n\t\t\t\n\t\t\t// 下一级所需经验值增加 (简单公式：下一级 = 当前级 * 1.5)\n\t\t\ttree.nextLevelExp = Math.round(tree.nextLevelExp * 1.5);\n\t\t\t\n\t\t\t// 显示升级提示\n\t\t\tuni.showToast({\n\t\t\t\ttitle: `树木升级到 Lv.${tree.level}！`,\n\t\t\t\ticon: 'success',\n\t\t\t\tduration: 2000\n\t\t\t});\n\t\t}\n\t\t\n\t\t// 保存树木状态\n\t\tuni.setStorageSync('growingTree', tree);\n\t}\n\t\n\tfunction loadFocusHistory() {\n\t\tfocusHistory.value = uni.getStorageSync('focusHistory') || [];\n\t}\n\t\n\tfunction calculateStats() {\n\t\t// 获取今天的日期（格式为 YYYY-MM-DD）\n\t\tconst today = new Date().toISOString().split('T')[0];\n\t\t\n\t\t// 今日专注次数和时间\n\t\ttodayFocusCount.value = 0;\n\t\ttodayFocusMinutes.value = 0;\n\t\t\n\t\t// 遍历历史记录\n\t\tfocusHistory.value.forEach(record => {\n\t\t\t// 检查是否是今天的记录\n\t\t\tconst recordDate = new Date(record.completedAt).toISOString().split('T')[0];\n\t\t\tif (recordDate === today) {\n\t\t\t\ttodayFocusCount.value++;\n\t\t\t\ttodayFocusMinutes.value += record.duration;\n\t\t\t}\n\t\t});\n\t\t\n\t\t// 计算完成的任务数量\n\t\tconst tasks = uni.getStorageSync('tasks') || [];\n\t\tcompletedTasks.value = tasks.filter(task => task.completed).length;\n\t}\n\t\n\tfunction viewAllHistory() {\n\t\tuni.navigateTo({\n\t\t\turl: '/pages/focusHistory/focusHistory'\n\t\t});\n\t}\n\t\n\tfunction clearTimer() {\n\t\tif (timer.value) {\n\t\t\tclearInterval(timer.value);\n\t\t\ttimer.value = null;\n\t\t}\n\t}\n</script>\n\n<style>\n\t/* ... */\n</style>","import mod from \"-!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./focus.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./focus.vue?vue&type=style&index=0&lang=css&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1742347869547\n      var cssReload = require(\"D:/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"/\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}